# Xamarin.Android.
# Build a Xamarin.Android project.
# Add steps that test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin

trigger:
- release-pipeline

variables:
  buildConfiguration: 'Release'
  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'

stages:
- stage: 'Build'
  displayName: 'Build the mobile/web application'
  jobs:
  - job: Android
    pool:
      vmImage: 'macos-latest'

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '**/*.sln'

    - task: XamarinAndroid@1
      inputs:
        projectFile: '**/*droid*.csproj'
        outputDirectory: '$(outputDirectory)'
        configuration: '$(buildConfiguration)'

    - task: AndroidSigning@3
      inputs:
        apksign: false
        zipalign: false
        apkFiles: '$(outputDirectory)/*.apk'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(outputDirectory)'

  - job: iOS
    pool:
      vmImage: 'macos-latest'

    steps:
    # To manually select a Xamarin SDK version on the Microsoft-hosted macOS agent,
    # configure this task with the *Mono* version that is associated with the
    # Xamarin SDK version that you need, and set the "enabled" property to true.
    # See https://go.microsoft.com/fwlink/?linkid=871629
    - script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 5_12_0
      displayName: 'Select the Xamarin SDK version'
      enabled: false

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '**/*.sln'

    - task: XamariniOS@2
      inputs:
        solutionFile: '**/*.sln'
        configuration: 'Release'
        buildForSimulator: true
        packageApp: true
        args: /p:IpaPackageDir="/Users/vsts/agent/2.153.2/work/1/a"

    - task: CopyFiles@2
      inputs:
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: MyBuildOutputs
        zipAfterPublish: true

- stage: 'Deploy'
  displayName: 'Deploy the mobile application'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-20.04'
    environment: dev
    #variables:
    #- group: Release
